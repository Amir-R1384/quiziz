<div class="font-bold text-2xl text-gray-800">Change password</div>
<div class="bg-primary rounded-full w-full h-0.5 mt-2 mb-10"></div>

<form class="flex-1 flex flex-col gap-y-5 w-1/2 pl-4">
    <div>
        <label for="oldPasswordInp" class="block text-lg text-gray-700 font-medium mb-2">Old
            password</label>
        <input id="oldPasswordInp" type="password" class="settings-input block w-full px-2 py-1 bg-gray-100 border border-black rounded-md">
        <div class="error-div text-red-500" data-for="oldPassword"></div>
    </div>
    <div>
        <label for="newPasswordInp" class="block text-lg text-gray-700 font-medium mb-2">New
            password</label>
        <input id="newPasswordInp" type="password" class="settings-input block w-full px-2 py-1 bg-gray-100 border border-black rounded-md">
        <div class="error-div text-red-500" data-for="password"></div>
    </div>
    <div>
        <label for="confirmPasswordInp" class="block text-lg text-gray-700 font-medium mb-2">Confirm
            password</label>
        <input id="confirmPasswordInp" type="password" class="settings-input block w-full px-2 py-1 bg-gray-100 border border-black rounded-md">
        <div class="error-div text-red-500" data-for="confirmPassword"></div>
    </div>

    <div>
        <button onclick="changePassword()" class="bg-primary text-white font-medium text-xl py-1 px-5 rounded-md hover:opacity-90 transition-opacity shadow-sm">Save</button>
    </div>

</form>

<div class="font-bold text-2xl mt-10 text-gray-800">Stats</div>
<div class="bg-primary rounded-full w-full h-0.5 mt-2 mb-10"></div>

<div class="flex-1 flex flex-col gap-y-5 w-full pl-4">
    <div class="w-full flex justify-between">
        <label for="statsToggle" class="block text-lg text-gray-700 font-medium mb-2">Show
            stats</label>
        <div id="statsToggle" class="toggle <%= userInfo.showStats ? 'active' : '' %> flex items-center w-12 h-6 rounded-2xl bg-gray-400 cursor-pointer transition-colors" style="padding: 2px;" onclick="this.classList.toggle('active')">
            <div class="bg-white rounded-full w-5 h-5 transition-transform duration-300 ease-in-out">
            </div>
        </div>
    </div>

    <div class="w-full flex justify-between">
        <label for="showQuizzesToggle" class="block text-lg text-gray-700 font-medium mb-2">Show
            quizzes</label>
        <div id="showQuizzesToggle" class="toggle <%= userInfo.showQuizzes ? 'active' : '' %> flex items-center w-12 h-6 rounded-2xl bg-gray-400 cursor-pointer transition-colors" style="padding: 2px;" onclick="this.classList.toggle('active')">
            <div class="bg-white rounded-full w-5 h-5 transition-transform duration-300 ease-in-out">
            </div>
        </div>
    </div>

    <div>
        <button onclick="saveStats()" class="bg-primary text-white font-medium text-xl py-1 px-5 rounded-md hover:opacity-90 transition-opacity shadow-sm">Save</button>
    </div>

</div>
<script>
    async function changePassword() {

        const data = {
            oldPassword: oldPasswordInp.value,
            newPassword: newPasswordInp.value,
            confirmPassword: confirmPasswordInp.value
        }

        const res = await fetch('/settings/account', {
            method: 'POST',
            headers: {
                'Content-Type': 'Application/json'
            },
            body: JSON.stringify(data)
        })

        if (res.ok) {

            showUpdateMessage()

        } else {
            const err = await res.json()

            if (err.inputs) {

                for (let name in err.inputs) {
                    const value = err.inputs[name]
                    const errorField = document.querySelector(`.error-div[data-for='${name}']`)
                    errorField.innerText = value
                }

            } else {
                displayErrorPage(res.status)
            }
        }
    }

    async function saveStats() {

        const data = {
            showStats: statsToggle.classList.contains('active'),
            showQuizzes: showQuizzesToggle.classList.contains('active')
        }

        const res = await fetch('/settings/account', {
            method: 'POST',
            headers: {
                'Content-Type': 'Application/json'
            },
            body: JSON.stringify(data)
        })

        if (res.ok) {
            showUpdateMessage()
        } else {
            displayErrorPage(res.status)
        }
    }
</script>
