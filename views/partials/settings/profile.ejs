<div class="text-2xl font-bold text-gray-800">Visible profile</div>
<div class="bg-primary rounded-full w-full h-0.5 mt-2 mb-10"></div>

<form class="flex">
    <div class="flex flex-col flex-1 gap-y-10">
        <div>
            <label for="nameInp" class="block mb-2 text-lg font-medium text-gray-700">Name</label>
            <input id="nameInp" type="text" value="<%= userInfo.name %>" class="block w-full px-2 py-1 bg-gray-100 border border-black rounded-md">
            <div class="text-red-500 error-div" data-for="name"></div>
        </div>
        <div>
            <label for="emailInp" class="block mb-2 text-lg font-medium text-gray-700">Email</label>
            <input id="emailInp" type="email" value="<%= userInfo.email %>" class="block w-full px-2 py-1 bg-gray-100 border border-black rounded-md">
            <div class="text-red-500 error-div" data-for="email"></div>
        </div>

        <div>
            <button onclick="saveProfile()" type="submit" id="saveSettingsBtn" class="px-5 py-1 text-xl font-medium text-white transition-opacity rounded-md shadow-sm bg-primary hover:opacity-90">Save</button>
        </div>

    </div>
    <div class="flex justify-end flex-1">
        <div class="w-40 h-40 mr-12 bg-center bg-cover rounded-full" style="background-image: url('<%= userInfo.profileImageEncoded || `/assets/images/defaultProfileImage.jpg` %>')">
            <input type="file" accept="image/*" id="imgInp" hidden>
            <label for="imgInp" class="relative grid w-full h-full font-semibold text-white transition-opacity duration-300 rounded-full opacity-0 cursor-pointer place-items-center bg-primary hover:opacity-100">
                Choose an image
                <button id="removeImgBtn" class="absolute bottom-0 left-0 px-2 py-1 mb-1 text-xs font-medium text-center text-white bg-red-500 rounded-md">Remove
                    Image</button>
            </label>
        </div>
    </div>
</form>
<script>
    imgInp.addEventListener('change', updateProfileImage)
    removeImgBtn.addEventListener('mouseup', removeProfileImage)

    function updateProfileImage(event) {

        if (!this.files.length || !event.isTrusted) {
            this.setAttribute('data-value', 'no image')
            const imageInputParent = imgInp.parentNode
            imageInputParent.style.backgroundImage = 'url(/assets/images/defaultProfileImage.jpg)'
            return
        }

        const fileReader = new FileReader()
        fileReader.readAsDataURL(this.files[0])

        fileReader.onload = () => {
            const img = new Image()
            img.src = fileReader.result

            img.onload = () => {
                const canvas = document.createElement('canvas')
                const ctx = canvas.getContext('2d')
                canvas.width = img.width
                canvas.height = img.height

                ctx.drawImage(img, 0, 0, canvas.width, canvas.height)

                const imageEncoded = canvas.toDataURL('image/jpeg', 0.2)

                imgInp.setAttribute('data-value', imageEncoded)

                const imageInputParent = imgInp.parentNode
                imageInputParent.style.backgroundImage = `url(${imageEncoded})`
            }
        }
    }

    function removeProfileImage() {
        const event = new Event('change')
        imgInp.dispatchEvent(event)
    }

    async function saveProfile() {

        const data = {
            name: nameInp.value,
            email: emailInp.value
        }

        // Setting the value for profileImageEncoded
        const value = imgInp.getAttribute('data-value')
        data.profileImageEncoded = value === null ? undefined : value === 'no image' ? null : value

        const res = await fetch('/settings/profile', {
            method: 'POST',
            headers: {
                'Content-Type': 'Application/json'
            },
            body: JSON.stringify(data)
        })

        if (res.ok) {

            showUpdateMessage()

        } else {
            const err = await res.json()

            if (err.inputs) {

                for (let name in err.inputs) {
                    const value = err.inputs[name]
                    const errorField = document.querySelector(`.error-div[data-for='${name}']`)
                    errorField.innerText = value
                }

            } else {
                displayErrorPage(res.status)
            }
        }
    }
</script>
